{"ast":null,"code":"const regexEmail = /^[a-zA-Z0-9._%+-]{1,35}@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\nconst regexPass = /[a-zA-Z]/ && /[0-9]/;\nconst regexPassLength = /^.{6,10}$/;\nexport function validate(input) {\n  let errors = {};\n  if (!regexEmail.test(input.username)) {\n    errors.username = 'Esto no es un email valido';\n  } else if (!input.username.length >= 35) {\n    errors.username = 'El campo debe tener menos de 35 caracteres';\n  } else if (!input.username.length === 0) {\n    errors.username = 'Por favor completa este campo';\n  }\n  if (!regexPassLength.test(input.password)) {\n    errors.password = 'El campo debe entre 6 y 10 caracteres';\n  } else if (!regexPass.test(input.password)) {\n    errors.password = 'La contrase単a requiere al menos una letra y un numero';\n  }\n  return errors;\n}\n\n// export function validate(input) {\n//  let errors = {}\n\n//  // eslint-disable-next-line default-case\n//  switch (true) {\n//   case !regexEmail.test(input.username):\n//    errors.username = 'Esto no es un email valido';\n//    break;\n//   case input.username.length >= 35:\n//    errors.username = 'El campo debe tener menos de 35 caracteres';\n//    break;\n//   case input.username.length === 0:\n//    errors.username = 'Por favor completa este campo';\n//    break;\n//   case !regexPassLength.test(input.password):\n//    errors.password = 'El campo debe entre 6 y 10 caracteres';\n//    break;\n//   case !regexPass.test(input.password):\n//    errors.password = 'La contrase単a requiere al menos una letra y un numero';\n//    break;\n//  }\n\n//  return errors;\n// }\n\n// const regexEmail = /^[a-zA-Z0-9._%+-]{1,35}@[a-zA-Z0-9.-]+.[a-zA-Z]{2,}$/;\n// const regexPass = /^[A-Za-z]\\d[A-Za-z]$/;\n// const regexPassLength = /^.{6,10}$/;\n\n// const errormsj = \"email\";\n\n// const emailValido = \"user@hotmail.com\";\n// const emailFail = \"sjhasd\";\n// const passvalido = \"assd\";\n// const passFail = \"\";\n\n// const generalMessage = {\n//   email: () => (regexEmail.test(emailValido) ? \"Es valido \" : \"No es valido\"),\n// };\n\n// const default_message = () => \"Ingresa los datos\";\n\n// const result = generalMessage[errormsj]\n//   ? generalMessage[errormsj]()\n//   : default_message;\n\n// result;","map":{"version":3,"names":["regexEmail","regexPass","regexPassLength","validate","input","errors","test","username","length","password"],"sources":["F:/proyectos/rick-and-morty-project/src/components/LoginForm/validation.js"],"sourcesContent":["\r\nconst regexEmail = /^[a-zA-Z0-9._%+-]{1,35}@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/\r\nconst regexPass = /[a-zA-Z]/ && /[0-9]/\r\nconst regexPassLength = /^.{6,10}$/\r\n\r\nexport function validate(input) {\r\n let errors = {};\r\n\r\n if (!regexEmail.test(input.username)) {\r\n  errors.username = 'Esto no es un email valido';\r\n } else if (!input.username.length >= 35) {\r\n  errors.username = 'El campo debe tener menos de 35 caracteres';\r\n } else if (!input.username.length === 0) {\r\n  errors.username = 'Por favor completa este campo';\r\n }\r\n\r\n if (!regexPassLength.test(input.password)) {\r\n  errors.password = 'El campo debe entre 6 y 10 caracteres';\r\n }\r\n else if (!regexPass.test(input.password)) {\r\n  errors.password = 'La contrase単a requiere al menos una letra y un numero';\r\n }\r\n\r\n return errors;\r\n}\r\n\r\n// export function validate(input) {\r\n//  let errors = {}\r\n\r\n//  // eslint-disable-next-line default-case\r\n//  switch (true) {\r\n//   case !regexEmail.test(input.username):\r\n//    errors.username = 'Esto no es un email valido';\r\n//    break;\r\n//   case input.username.length >= 35:\r\n//    errors.username = 'El campo debe tener menos de 35 caracteres';\r\n//    break;\r\n//   case input.username.length === 0:\r\n//    errors.username = 'Por favor completa este campo';\r\n//    break;\r\n//   case !regexPassLength.test(input.password):\r\n//    errors.password = 'El campo debe entre 6 y 10 caracteres';\r\n//    break;\r\n//   case !regexPass.test(input.password):\r\n//    errors.password = 'La contrase単a requiere al menos una letra y un numero';\r\n//    break;\r\n//  }\r\n\r\n//  return errors;\r\n// }\r\n\r\n// const regexEmail = /^[a-zA-Z0-9._%+-]{1,35}@[a-zA-Z0-9.-]+.[a-zA-Z]{2,}$/;\r\n// const regexPass = /^[A-Za-z]\\d[A-Za-z]$/;\r\n// const regexPassLength = /^.{6,10}$/;\r\n\r\n\r\n// const errormsj = \"email\";\r\n\r\n// const emailValido = \"user@hotmail.com\";\r\n// const emailFail = \"sjhasd\";\r\n// const passvalido = \"assd\";\r\n// const passFail = \"\";\r\n\r\n\r\n// const generalMessage = {\r\n//   email: () => (regexEmail.test(emailValido) ? \"Es valido \" : \"No es valido\"),\r\n// };\r\n\r\n// const default_message = () => \"Ingresa los datos\";\r\n\r\n// const result = generalMessage[errormsj]\r\n//   ? generalMessage[errormsj]()\r\n//   : default_message;\r\n\r\n// result;"],"mappings":"AACA,MAAMA,UAAU,GAAG,uDAAuD;AAC1E,MAAMC,SAAS,GAAG,UAAU,IAAI,OAAO;AACvC,MAAMC,eAAe,GAAG,WAAW;AAEnC,OAAO,SAASC,QAAQ,CAACC,KAAK,EAAE;EAC/B,IAAIC,MAAM,GAAG,CAAC,CAAC;EAEf,IAAI,CAACL,UAAU,CAACM,IAAI,CAACF,KAAK,CAACG,QAAQ,CAAC,EAAE;IACrCF,MAAM,CAACE,QAAQ,GAAG,4BAA4B;EAC/C,CAAC,MAAM,IAAI,CAACH,KAAK,CAACG,QAAQ,CAACC,MAAM,IAAI,EAAE,EAAE;IACxCH,MAAM,CAACE,QAAQ,GAAG,4CAA4C;EAC/D,CAAC,MAAM,IAAI,CAACH,KAAK,CAACG,QAAQ,CAACC,MAAM,KAAK,CAAC,EAAE;IACxCH,MAAM,CAACE,QAAQ,GAAG,+BAA+B;EAClD;EAEA,IAAI,CAACL,eAAe,CAACI,IAAI,CAACF,KAAK,CAACK,QAAQ,CAAC,EAAE;IAC1CJ,MAAM,CAACI,QAAQ,GAAG,uCAAuC;EAC1D,CAAC,MACI,IAAI,CAACR,SAAS,CAACK,IAAI,CAACF,KAAK,CAACK,QAAQ,CAAC,EAAE;IACzCJ,MAAM,CAACI,QAAQ,GAAG,uDAAuD;EAC1E;EAEA,OAAOJ,MAAM;AACd;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}